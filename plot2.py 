# Re-import necessary modules after code execution reset
import matplotlib.pyplot as plt
import math
import re

# Provided log data as a string
log_data = """
L: -112.0°, R: 133.0°, Yaw: 0.0, Rate: 0.05944281, Note: Init Done
3, L: -112.0°, R: 133.0°, Yaw: 3.051758e-05, Rate: -0.08055719, Note: drive 250mm
994, L: 249.0°, R: 494.0°, Yaw: 0.1638794, Rate: -0.2205572, Note: drive 250mm
1980, L: 386.0°, R: 356.0°, Yaw: 94.82266, Rate: -1.060557, Note: drive 250mm
2955, L: 740.0°, R: 722.0°, Yaw: 90.74838, Rate: 1.179443, Note: drive 250mm
3945, L: 878.0°, R: 582.0°, Yaw: 185.2661, Rate: 3.909443, Note: drive 250mm
4920, L: 1235.0°, R: 950.0°, Yaw: 181.7995, Rate: 3.979443, Note: drive 250mm
5915, L: 1370.0°, R: 809.0°, Yaw: 275.1749, Rate: 2.159443, Note: drive 250mm
6890, L: 1726.0°, R: 1177.0°, Yaw: 270.8669, Rate: -0.5005572, Note: drive 250mm 
"""

# Constants
WHEEL_DIAMETER = 56  # mm
DEGREE_TO_MM = (math.pi * WHEEL_DIAMETER) / 360  # mm per degree

# Parse log
x, y = 0.0, 0.0
X_path, Y_path = [x], [y]
lines = log_data.strip().split('\n')
last_l, last_r = None, None

for line in lines:
    match = re.search(r"(\d*),? L: ([\-0-9.]+)°.*, R: ([\-0-9.]+)°.*, Yaw: ([\-0-9.e]+)", line)
    if match:
        _, l_angle, r_angle, yaw_deg = match.groups()
        l_angle = float(l_angle)
        r_angle = float(r_angle)
        yaw_rad = math.radians(float(yaw_deg))

        if last_l is not None and last_r is not None:
            delta_l = (l_angle - last_l) * DEGREE_TO_MM
            delta_r = (r_angle - last_r) * DEGREE_TO_MM
            dist = (delta_l + delta_r) / 2

            dx = dist * math.cos(yaw_rad)
            dy = dist * math.sin(yaw_rad)
            x += dx
            y += dy
            X_path.append(x)
            Y_path.append(y)

        last_l, last_r = l_angle, r_angle

# Plot path
plt.figure(figsize=(10, 8))
plt.plot(X_path, Y_path, 'o-', color='blue')
plt.title("Robot Movement Path from Log")
plt.xlabel("X Position (mm)")
plt.ylabel("Y Position (mm)")
plt.axis('equal')
plt.grid(True)
plt.show()
